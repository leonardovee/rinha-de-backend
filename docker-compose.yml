version: '3'

services:
  api1:
    image: api
    hostname: api1
    build:
      context: .
    depends_on:
      - db
      - redis
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.25GB'

  api2:
    image: api
    hostname: api2
    build:
      context: .
    depends_on:
      - db
      - redis
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.25GB'

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1

    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.5GB'

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '0.5GB'

  redis:
    image: redis
    ports:
      - '6379:6379'
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '1.5GB'

  grafana:
    image: grafana/grafana:7.5.7
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/exported_dashboard.json"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana

  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - 9000:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yaml

volumes:
  grafana-data:
  prometheus-data:
